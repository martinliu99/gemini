<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.gemini</groupId>
    <artifactId>gemini</artifactId>
    <packaging>pom</packaging>
    <version>${revision}</version>

    <name>${project.artifactId}</name>

    <inceptionYear>2023</inceptionYear>

    <description>Java-agent based, runtime-weaving aop framework</description>
    <url>https://github.com/martinliu99/gemini</url>


    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git@github.com:martinliu99/gemini.git</connection>
        <developerConnection>scm:git:git@github.com:martinliu99/gemini.git</developerConnection>
        <url>https://github.com/martinliu99/gemini</url>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <name>martin.liu</name>
        </developer>
    </developers>


    <modules>
        <module>gemini-api</module>

        <module>gemini-core</module>
        <module>gemini-aspectj</module>
        <module>gemini-aop</module>

        <module>gemini-activator</module>

        <module>gemini-toolkit</module>
        <module>gemini-aspect</module>

        <module>gemini-demo</module>
    </modules>


    <properties>
        <!-- project settings -->
        <revision>0.15.0-SNAPSHOT</revision>

        <license.root.dir>${maven.multiModuleProjectDirectory}/docs/license</license.root.dir>

        <release.root.dir>${maven.multiModuleProjectDirectory}/gemini-release</release.root.dir>
        <release.lib.dir>${release.root.dir}/lib</release.lib.dir>
        <release.conf.dir>${release.root.dir}/conf</release.conf.dir>
        <release.aspectapps.dir>${release.root.dir}/aspectapps</release.aspectapps.dir>
        <release.demoapps.dir>${release.root.dir}/demoapps</release.demoapps.dir>

        <resource.userconf.folder>userconf</resource.userconf.folder>

        <artifact.file.name>${project.artifactId}-${project.version}</artifact.file.name>


        <!-- dependencies settings -->
        <slf4j-api.version>2.0.16</slf4j-api.version>
        <log4j.version>2.24.3</log4j.version>
        <disruptor.version>3.4.4</disruptor.version>
        <logback.version>1.3.15</logback.version>

        <jspecify.version>1.0.0</jspecify.version>
        <bytebuddy.version>1.17.5</bytebuddy.version>
        <classgraph.version>4.8.179</classgraph.version>
        <aspectj.version>1.9.24</aspectj.version>

        <javax.inject.version>1</javax.inject.version>
        <jakarta.inject-api.version>2.0.1</jakarta.inject-api.version>
        <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
        <jakarta.annotation-api.version>3.0.0</jakarta.annotation-api.version>
        <spring.version>4.3.30.RELEASE</spring.version>

        <junit-jupiter-api.version>5.11.4</junit-jupiter-api.version>
        <assertj-core.version>3.27.2</assertj-core.version>


        <!-- plugin settings -->
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <java.version>8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>

        <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
        <spotbugs-maven-plugin.version>4.8.3.1</spotbugs-maven-plugin.version>
        <spotbugs.version>4.8.4</spotbugs.version>

        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
        <maven-shade-plugin.version>3.6.0</maven-shade-plugin.version>

        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <maven-dependency-plugin.version>3.6.1</maven-dependency-plugin.version>
        <maven-clean-plugin.version>3.3.2</maven-clean-plugin.version>
        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
        <maven-flatten-plugin.version>1.5.0</maven-flatten-plugin.version>      <!-- maven 3.6.3 -->

        <license-check-plugin.version>2.4.0</license-check-plugin.version>
        <license-maven-plugin.version>4.3</license-maven-plugin.version>
        <versions-maven-plugin.version>2.8.1</versions-maven-plugin.version>


        <!-- switches -->
        <skipTests>true</skipTests>
        <spotbugs.skipskip>true</spotbugs.skipskip>
    </properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.gemini</groupId>
                <artifactId>gemini-api</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>io.gemini</groupId>
                <artifactId>gemini-core</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>io.gemini</groupId>
                <artifactId>gemini-aspectj</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>io.gemini</groupId>
                <artifactId>gemini-aop</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>io.gemini</groupId>
                <artifactId>gemini-activator</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>io.gemini</groupId>
                <artifactId>gemini-toolkit</artifactId>
                <version>${revision}</version>
            </dependency>


            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                 <version>${slf4j-api.version}</version>
            </dependency>
<!--            <dependency>-->
<!--                <groupId>org.apache.logging.log4j</groupId>-->
<!--                <artifactId>log4j-slf4j2-impl</artifactId>-->
<!--                <version>${log4j.version}</version>-->
<!--            </dependency>-->

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jcl</artifactId>
                <version>${log4j.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${disruptor.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.jspecify</groupId>
                <artifactId>jspecify</artifactId>
                <version>${jspecify.version}</version>
            </dependency>

            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy</artifactId>
                <version>${bytebuddy.version}</version>
            </dependency>
            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy-agent</artifactId>
                <version>${bytebuddy.version}</version>
                <scope>test</scope>
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>io.github.classgraph</groupId>
                <artifactId>classgraph</artifactId>
                <version>${classgraph.version}</version>
            </dependency>

            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>${aspectj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjmatcher</artifactId>
                <version>${aspectj.version}</version>
            </dependency>


            <!-- provided scope -->
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>${javax.inject.version}</version>
                <scope>provided</scope>
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>jakarta.inject</groupId>
                <artifactId>jakarta.inject-api</artifactId>
                <version>${jakarta.inject-api.version}</version>
                <scope>provided</scope>
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax.annotation-api.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.annotation</groupId>
                <artifactId>jakarta.annotation-api</artifactId>
                <version>${jakarta.annotation-api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
                <scope>provided</scope>
                <optional>true</optional>
            </dependency>


            <!-- test scope -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter-api.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj-core.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>


    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <release>${maven.compiler.release}</release>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <proc>none</proc>
                        <compilerArgument>-parameters</compilerArgument>
                        <showWarnings>true</showWarnings>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-versions</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireJavaVersion>
                                        <version>[8,)</version>
                                    </requireJavaVersion>
                                    <requireMavenVersion>
                                        <version>[3.6.3,)</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                        <execution>
                            <id>enforce-dependency</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <dependencyConvergence />
<!--                                    <requireReleaseDeps />-->
                                    <requireUpperBoundDeps />
                                </rules>
                            </configuration>
                        </execution>
<!--                        <execution>-->
<!--                            <id>enforce-noDuplicateClasses</id>-->
<!--                            <goals>-->
<!--                                <goal>enforce</goal>-->
<!--                            </goals>-->
<!--                            <configuration>-->
<!--                                <rules>-->
<!--                                    <banDuplicateClasses>-->
<!--                                        <scopes>-->
<!--                                            <scope>compile</scope>-->
<!--                                        </scopes>-->
<!--                                        <findAllDuplicates>true</findAllDuplicates>-->
<!--                                        <ignoreWhenIdentical>true</ignoreWhenIdentical>-->
<!--                                        <ignoreClasses>-->
<!--                                            <ignoreClass>module-info</ignoreClass>-->
<!--                                        </ignoreClasses>-->
<!--                                    </banDuplicateClasses>-->
<!--                                </rules>-->
<!--                            </configuration>-->
<!--                        </execution>-->
                    </executions>
                </plugin>

                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs-maven-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.github.spotbugs</groupId>
                            <artifactId>spotbugs</artifactId>
                            <version>${spotbugs.version}</version>
                          </dependency>
                    </dependencies>
                    <configuration>
                        <skip>true</skip>
                        <effort>Max</effort>
                        <threshold>Low</threshold>
                        <failOnError>true</failOnError>

                        <includeFilterFile>scripts\spotbugs\spotbugs-security-include.xml</includeFilterFile>
                        <excludeFilterFile>scripts\spotbugs\spotbugs-security-exclude.xml</excludeFilterFile>
                        <plugins>
                            <plugin>
                                <groupId>com.h3xstream.findsecbugs</groupId>
                                <artifactId>findsecbugs-plugin</artifactId>
                                <version>1.12.0</version>
                            </plugin>
                        </plugins>
                    </configuration>
                    <executions>
                        <execution>
                            <id>check</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                      <archive>
                        <!-- https://bugs.openjdk.org/browse/JDK-8305597 -->
                        <index>false</index>
                        <manifest>
                            <addClasspath>false</addClasspath>
                            <addDefaultEntries>true</addDefaultEntries>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
                        </manifest>
                        <manifestEntries>
                            <source-compatibility>${maven.compiler.source}</source-compatibility>
                            <target-compatibility>${maven.compiler.target}</target-compatibility>
                        </manifestEntries>
                      </archive>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
	                <groupId>org.apache.maven.plugins</groupId>
	                <artifactId>maven-shade-plugin</artifactId>
	                <version>${maven-shade-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven-antrun-plugin.version}</version>
                    <inherited>false</inherited>            <!-- submodule does not inherit this task! -->
                    <executions>
                        <execution>
                            <id>package</id>
                            <phase>package</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <target>
                                    <mkdir dir="${release.root.dir}" />
                                </target>
                            </configuration>
                        </execution>
                        <execution>
                            <id>clean</id>
                            <phase>pre-clean</phase>
                            <goals>
                              <goal>run</goal>
                            </goals>
                            <configuration>
                                <target>
                                    <delete dir="${release.root.dir}" includeemptydirs="true" />
                                </target>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>install</id>
                            <phase>install</phase>
                            <goals>
                                <goal>sources</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>copy-dependencies</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>
                                    ${project.build.directory}/dependencies</outputDirectory>
                                <includeScope>runtime</includeScope>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <skipTests>${skipTests}</skipTests>
                    </configuration>
                </plugin>

                <!--remove ${revision} when install or deploy artifact to repository -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${maven-flatten-plugin.version}</version>
                    <configuration>
                        <updatePomFile>true</updatePomFile>
                        <flattenMode>resolveCiFriendliesOnly</flattenMode>
                        <keepCommentsInPom>true</keepCommentsInPom>
                        <outputDirectory>${project.build.directory}/pom</outputDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>flatten</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>flatten</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>flatten.clean</id>
                            <phase>pre-clean</phase>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>


                <!--                <plugin>-->
                <!--                  <groupId>org.codehaus.mojo</groupId>-->
                <!--                  <artifactId>license-maven-plugin</artifactId>-->
                <!--                  <version>${license-check-plugin.version}</version>-->
                <!--                </plugin>-->

                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${license-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>format</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <header>${license.root.dir}/HEADER.txt</header>
                        <includes>
                            <include>**/*.java</include>
                        </includes>
                        <strictCheck>true</strictCheck>
                        <properties>
                            <license.year.period>2023</license.year.period>
                        </properties>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-maven-plugin.version}</version>
                    <configuration>
                        <generateBackupPoms>false</generateBackupPoms>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>


        <finalName>${artifact.file.name}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>${resource.userconf.folder}/*.*</exclude>
                </excludes>
            </resource>
        </resources>


        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>com.github.spotbugs</groupId>-->
<!--                <artifactId>spotbugs-maven-plugin</artifactId>-->
<!--            </plugin>-->

            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-antrun-plugin</artifactId>
            </plugin>

            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>flatten-maven-plugin</artifactId>
            </plugin>

<!--            <plugin>-->
<!--              <groupId>org.codehaus.mojo</groupId>-->
<!--              <artifactId>license-maven-plugin</artifactId>-->
<!--            </plugin>-->

            <plugin>
              <groupId>com.mycila</groupId>
              <artifactId>license-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.eclipse.m2e</groupId>
                <artifactId>lifecycle-mapping</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <lifecycleMappingMetadata>
                        <pluginExecutions>
                            <pluginExecution>
                                <pluginExecutionFilter>
                                    <groupId>org.apache.maven.plugins</groupId>
                                    <artifactId>maven-dependency-plugin</artifactId>
                                    <versionRange>[1.0.0,)</versionRange>
                                    <goals>
                                        <goal>copy-dependencies</goal>
                                    </goals>
                                </pluginExecutionFilter>
                                <action>
                                    <ignore />
                                </action>
                            </pluginExecution>
                        </pluginExecutions>
                    </lifecycleMappingMetadata>
                </configuration>
            </plugin>
        </plugins>
    </build>


    <repositories>
        <repository>
            <id>aliyun-repos</id>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>aliyun-repos</id>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>
